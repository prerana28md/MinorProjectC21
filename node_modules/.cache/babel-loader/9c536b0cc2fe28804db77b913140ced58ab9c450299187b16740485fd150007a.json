{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prera\\\\OneDrive\\\\Desktop\\\\MinorProjectC21\\\\src\\\\pages\\\\Compare.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Alert, Spinner, Tabs, Tab } from 'react-bootstrap';\nimport { dataAPI, aiAPI, mockDataAPI, mockAiAPI } from '../services/api';\nimport CompareCard from '../components/CompareCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Compare = () => {\n  _s();\n  var _comparisonData$data$, _comparisonData$data$2;\n  const [states, setStates] = useState([]);\n  const [cities1, setCities1] = useState([]);\n  const [cities2, setCities2] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [comparisonData, setComparisonData] = useState(null);\n  const [activeTab, setActiveTab] = useState('states');\n\n  // State comparison\n  const [state1, setState1] = useState('');\n  const [state2, setState2] = useState('');\n\n  // City comparison\n  const [cityState1, setCityState1] = useState('');\n  const [cityState2, setCityState2] = useState('');\n  const [city1, setCity1] = useState('');\n  const [city2, setCity2] = useState('');\n  useEffect(() => {\n    fetchStates();\n  }, []);\n  useEffect(() => {\n    if (cityState1) {\n      fetchCities(cityState1, 'cities1');\n    }\n  }, [cityState1]);\n  useEffect(() => {\n    if (cityState2) {\n      fetchCities(cityState2, 'cities2');\n    }\n  }, [cityState2]);\n  const fetchStates = async () => {\n    try {\n      const response = await dataAPI.getStates();\n      setStates(response.data);\n    } catch (err) {\n      console.log('Using mock data for states');\n      const mockResponse = await mockDataAPI.getStates();\n      setStates(mockResponse.data);\n    }\n  };\n  const fetchCities = async (stateName, setter) => {\n    try {\n      const response = await dataAPI.getStateCities(stateName);\n      console.log('Cities API Response:', response.data);\n\n      // Backend returns array of city objects, extract city names\n      const citiesData = Array.isArray(response.data) ? response.data.map(city => city.city_name || city.name || city) : [];\n      console.log('Extracted city names:', citiesData);\n      if (setter === 'cities1') {\n        setCities1(citiesData);\n      } else {\n        setCities2(citiesData);\n      }\n    } catch (err) {\n      console.log('Using mock data for cities');\n      const mockResponse = await mockDataAPI.getStateCities(stateName);\n      const citiesData = Array.isArray(mockResponse.data) ? mockResponse.data : [];\n      if (setter === 'cities1') {\n        setCities1(citiesData);\n      } else {\n        setCities2(citiesData);\n      }\n    }\n  };\n  const handleStateCompare = async () => {\n    if (!state1 || !state2) {\n      setError('Please select both states');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setComparisonData(null);\n    try {\n      var _data$safety_index, _data$visitors_, _data$famous_for, _data$best_season, _data$population, _data$literacy_rate, _data$gdp_inr_crore, _data$area_km, _data$visitors_2, _data$visitors_3, _data$visitors_4, _data$visitors_5, _data$visitors_6, _data$visitors_7, _data$safety_index2, _data$visitors_8, _data$famous_for2, _data$best_season2, _data$population2, _data$literacy_rate2, _data$gdp_inr_crore2, _data$area_km2, _data$visitors_9, _data$visitors_0, _data$visitors_1, _data$visitors_10, _data$visitors_11, _data$visitors_12;\n      const response = await aiAPI.compareStates(state1, state2);\n      console.log('API Response:', response.data);\n\n      // Extract data from backend response format\n      const data = response.data;\n\n      // Calculate tourism growth from visitor data\n      const state1Growth = data.visitors_2024 && data.visitors_2023 ? ((data.visitors_2024[state1] - data.visitors_2023[state1]) / data.visitors_2023[state1] * 100).toFixed(1) : 0;\n      const state2Growth = data.visitors_2024 && data.visitors_2023 ? ((data.visitors_2024[state2] - data.visitors_2023[state2]) / data.visitors_2023[state2] * 100).toFixed(1) : 0;\n\n      // Parse famous_for and best_season arrays (they come as strings with single quotes)\n      const parseArray = arrStr => {\n        if (typeof arrStr === 'string') {\n          try {\n            // Replace single quotes with double quotes for valid JSON\n            const jsonStr = arrStr.replace(/'/g, '\"');\n            return JSON.parse(jsonStr);\n          } catch {\n            // If JSON parsing fails, try to extract values manually\n            const matches = arrStr.match(/'([^']+)'/g);\n            if (matches) {\n              return matches.map(match => match.slice(1, -1));\n            }\n            return [arrStr];\n          }\n        }\n        return Array.isArray(arrStr) ? arrStr : [arrStr];\n      };\n\n      // Convert backend response to frontend format\n      const comparisonData = {\n        state1_data: {\n          name: state1,\n          tourism_growth: parseFloat(state1Growth),\n          risk_index: (_data$safety_index = data.safety_index) !== null && _data$safety_index !== void 0 && _data$safety_index[state1] ? 10 - data.safety_index[state1] * 10 : 0,\n          visitor_count: ((_data$visitors_ = data.visitors_2024) === null || _data$visitors_ === void 0 ? void 0 : _data$visitors_[state1]) || 0,\n          top_category: parseArray((_data$famous_for = data.famous_for) === null || _data$famous_for === void 0 ? void 0 : _data$famous_for[state1])[0] || 'General',\n          best_month: parseArray((_data$best_season = data.best_season) === null || _data$best_season === void 0 ? void 0 : _data$best_season[state1])[0] || 'Year-round',\n          population: ((_data$population = data.population) === null || _data$population === void 0 ? void 0 : _data$population[state1]) || 0,\n          literacy_rate: ((_data$literacy_rate = data.literacy_rate) === null || _data$literacy_rate === void 0 ? void 0 : _data$literacy_rate[state1]) || 0,\n          gdp: ((_data$gdp_inr_crore = data.gdp_inr_crore) === null || _data$gdp_inr_crore === void 0 ? void 0 : _data$gdp_inr_crore[state1]) || 0,\n          area: ((_data$area_km = data.area_km2) === null || _data$area_km === void 0 ? void 0 : _data$area_km[state1]) || 0,\n          // Add visitor data for chart\n          visitors: {\n            2020: ((_data$visitors_2 = data.visitors_2020) === null || _data$visitors_2 === void 0 ? void 0 : _data$visitors_2[state1]) || 0,\n            2021: ((_data$visitors_3 = data.visitors_2021) === null || _data$visitors_3 === void 0 ? void 0 : _data$visitors_3[state1]) || 0,\n            2022: ((_data$visitors_4 = data.visitors_2022) === null || _data$visitors_4 === void 0 ? void 0 : _data$visitors_4[state1]) || 0,\n            2023: ((_data$visitors_5 = data.visitors_2023) === null || _data$visitors_5 === void 0 ? void 0 : _data$visitors_5[state1]) || 0,\n            2024: ((_data$visitors_6 = data.visitors_2024) === null || _data$visitors_6 === void 0 ? void 0 : _data$visitors_6[state1]) || 0,\n            2025: ((_data$visitors_7 = data.visitors_2025) === null || _data$visitors_7 === void 0 ? void 0 : _data$visitors_7[state1]) || 0\n          }\n        },\n        state2_data: {\n          name: state2,\n          tourism_growth: parseFloat(state2Growth),\n          risk_index: (_data$safety_index2 = data.safety_index) !== null && _data$safety_index2 !== void 0 && _data$safety_index2[state2] ? 10 - data.safety_index[state2] * 10 : 0,\n          visitor_count: ((_data$visitors_8 = data.visitors_2024) === null || _data$visitors_8 === void 0 ? void 0 : _data$visitors_8[state2]) || 0,\n          top_category: parseArray((_data$famous_for2 = data.famous_for) === null || _data$famous_for2 === void 0 ? void 0 : _data$famous_for2[state2])[0] || 'General',\n          best_month: parseArray((_data$best_season2 = data.best_season) === null || _data$best_season2 === void 0 ? void 0 : _data$best_season2[state2])[0] || 'Year-round',\n          population: ((_data$population2 = data.population) === null || _data$population2 === void 0 ? void 0 : _data$population2[state2]) || 0,\n          literacy_rate: ((_data$literacy_rate2 = data.literacy_rate) === null || _data$literacy_rate2 === void 0 ? void 0 : _data$literacy_rate2[state2]) || 0,\n          gdp: ((_data$gdp_inr_crore2 = data.gdp_inr_crore) === null || _data$gdp_inr_crore2 === void 0 ? void 0 : _data$gdp_inr_crore2[state2]) || 0,\n          area: ((_data$area_km2 = data.area_km2) === null || _data$area_km2 === void 0 ? void 0 : _data$area_km2[state2]) || 0,\n          // Add visitor data for chart\n          visitors: {\n            2020: ((_data$visitors_9 = data.visitors_2020) === null || _data$visitors_9 === void 0 ? void 0 : _data$visitors_9[state2]) || 0,\n            2021: ((_data$visitors_0 = data.visitors_2021) === null || _data$visitors_0 === void 0 ? void 0 : _data$visitors_0[state2]) || 0,\n            2022: ((_data$visitors_1 = data.visitors_2022) === null || _data$visitors_1 === void 0 ? void 0 : _data$visitors_1[state2]) || 0,\n            2023: ((_data$visitors_10 = data.visitors_2023) === null || _data$visitors_10 === void 0 ? void 0 : _data$visitors_10[state2]) || 0,\n            2024: ((_data$visitors_11 = data.visitors_2024) === null || _data$visitors_11 === void 0 ? void 0 : _data$visitors_11[state2]) || 0,\n            2025: ((_data$visitors_12 = data.visitors_2025) === null || _data$visitors_12 === void 0 ? void 0 : _data$visitors_12[state2]) || 0\n          }\n        }\n      };\n      setComparisonData({\n        type: 'states',\n        data: comparisonData\n      });\n    } catch (err) {\n      console.log('Using mock data for state comparison');\n      const mockResponse = await mockAiAPI.compareStates(state1, state2);\n      console.log('Mock Response:', mockResponse.data);\n      setComparisonData({\n        type: 'states',\n        data: mockResponse.data || {}\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCityCompare = async () => {\n    if (!cityState1 || !city1 || !cityState2 || !city2) {\n      setError('Please select both cities');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setComparisonData(null);\n    try {\n      var _data$tourist_rating, _data$risk_index, _data$category, _data$best_time_to_vi, _data$tourist_rating2, _data$risk_index2, _data$category2, _data$best_time_to_vi2;\n      const response = await aiAPI.compareCities(cityState1, city1, cityState2, city2);\n      console.log('API Response:', response.data);\n\n      // Extract data from backend response format\n      const data = response.data;\n      const city1Key = `${city1}, ${cityState1}`;\n      const city2Key = `${city2}, ${cityState2}`;\n\n      // Convert backend response to frontend format\n      const comparisonData = {\n        state1_data: {\n          name: city1,\n          state: cityState1,\n          tourism_growth: ((_data$tourist_rating = data.tourist_rating) === null || _data$tourist_rating === void 0 ? void 0 : _data$tourist_rating[city1Key]) || 0,\n          risk_index: ((_data$risk_index = data.risk_index) === null || _data$risk_index === void 0 ? void 0 : _data$risk_index[city1Key]) || 0,\n          top_category: ((_data$category = data.category) === null || _data$category === void 0 ? void 0 : _data$category[city1Key]) || 'General',\n          best_month: ((_data$best_time_to_vi = data.best_time_to_visit) === null || _data$best_time_to_vi === void 0 ? void 0 : _data$best_time_to_vi[city1Key]) || 'Year-round'\n        },\n        state2_data: {\n          name: city2,\n          state: cityState2,\n          tourism_growth: ((_data$tourist_rating2 = data.tourist_rating) === null || _data$tourist_rating2 === void 0 ? void 0 : _data$tourist_rating2[city2Key]) || 0,\n          risk_index: ((_data$risk_index2 = data.risk_index) === null || _data$risk_index2 === void 0 ? void 0 : _data$risk_index2[city2Key]) || 0,\n          top_category: ((_data$category2 = data.category) === null || _data$category2 === void 0 ? void 0 : _data$category2[city2Key]) || 'General',\n          best_month: ((_data$best_time_to_vi2 = data.best_time_to_visit) === null || _data$best_time_to_vi2 === void 0 ? void 0 : _data$best_time_to_vi2[city2Key]) || 'Year-round'\n        }\n      };\n      setComparisonData({\n        type: 'cities',\n        data: comparisonData\n      });\n    } catch (err) {\n      console.log('Using mock data for city comparison');\n      const mockResponse = await mockAiAPI.compareCities(cityState1, city1, cityState2, city2);\n      console.log('Mock Response:', mockResponse.data);\n      setComparisonData({\n        type: 'cities',\n        data: mockResponse.data || {}\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderComparisonChart = () => {\n    var _state1_data$visitors, _state2_data$visitors;\n    if (!comparisonData || !comparisonData.data) return null;\n    const {\n      state1_data,\n      state2_data\n    } = comparisonData.data;\n\n    // Only show chart for state comparison with visitor data\n    if (comparisonData.type !== 'states' || !state1_data.visitors || !state2_data.visitors) {\n      return null;\n    }\n    const years = [2020, 2021, 2022, 2023, 2024, 2025];\n    const state1Visitors = years.map(year => state1_data.visitors[year] || 0);\n    const state2Visitors = years.map(year => state2_data.visitors[year] || 0);\n    const maxVisitors = Math.max(...state1Visitors, ...state2Visitors);\n    const minVisitors = Math.min(...state1Visitors, ...state2Visitors);\n    const range = maxVisitors - minVisitors;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"card-title\",\n          children: \"Visitor Trends Comparison (2020-2025)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted small\",\n          children: \"Annual visitor data comparison between the two states\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comparison-chart\",\n          style: {\n            height: '200px',\n            padding: '20px 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-end justify-content-between\",\n            style: {\n              height: '160px'\n            },\n            children: years.map((year, index) => {\n              const state1Height = range > 0 ? (state1Visitors[index] - minVisitors) / range * 100 : 50;\n              const state2Height = range > 0 ? (state2Visitors[index] - minVisitors) / range * 100 : 50;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-column align-items-center\",\n                style: {\n                  flex: 1,\n                  minWidth: '50px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar me-1\",\n                  style: {\n                    height: `${state1Height}%`,\n                    width: '20px',\n                    backgroundColor: '#007bff',\n                    borderRadius: '2px 2px 0 0',\n                    marginBottom: '4px',\n                    transition: 'all 0.3s ease',\n                    cursor: 'pointer'\n                  },\n                  title: `${state1_data.name} ${year}: ${state1Visitors[index].toLocaleString()} visitors`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar\",\n                  style: {\n                    height: `${state2Height}%`,\n                    width: '20px',\n                    backgroundColor: '#28a745',\n                    borderRadius: '2px 2px 0 0',\n                    marginBottom: '8px',\n                    transition: 'all 0.3s ease',\n                    cursor: 'pointer'\n                  },\n                  title: `${state2_data.name} ${year}: ${state2Visitors[index].toLocaleString()} visitors`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"fw-bold\",\n                    style: {\n                      fontSize: '0.7rem',\n                      color: '#333'\n                    },\n                    children: year\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this)]\n              }, year, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"me-2\",\n                style: {\n                  width: '12px',\n                  height: '12px',\n                  backgroundColor: '#007bff',\n                  borderRadius: '2px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: state1_data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"me-2\",\n                style: {\n                  width: '12px',\n                  height: '12px',\n                  backgroundColor: '#28a745',\n                  borderRadius: '2px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: state2_data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"g-3\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center p-3 bg-light rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"fw-bold text-primary\",\n                  children: ((_state1_data$visitors = state1_data.visitors[2025]) === null || _state1_data$visitors === void 0 ? void 0 : _state1_data$visitors.toLocaleString()) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: [state1_data.name, \" - 2025 Visitors\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center p-3 bg-light rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"fw-bold text-success\",\n                  children: ((_state2_data$visitors = state2_data.visitors[2025]) === null || _state2_data$visitors === void 0 ? void 0 : _state2_data$visitors.toLocaleString()) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: [state2_data.name, \" - 2025 Visitors\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Compare Destinations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Compare states and cities side by side\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 10,\n          className: \"mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            activeKey: activeTab,\n            onSelect: k => setActiveTab(k),\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"states\",\n              title: \"State Comparison\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title mb-4\",\n                    children: \"Compare States\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"g-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: 5,\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"First State\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 379,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                          value: state1,\n                          onChange: e => setState1(e.target.value),\n                          disabled: loading,\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"Choose first state...\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 385,\n                            columnNumber: 29\n                          }, this), Array.isArray(states) && states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: state,\n                            children: state\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 31\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 380,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 2,\n                      className: \"d-flex align-items-end\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center w-100\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-muted\",\n                          children: \"VS\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 397,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 5,\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Second State\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                          value: state2,\n                          onChange: e => setState2(e.target.value),\n                          disabled: loading,\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"Choose second state...\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 409,\n                            columnNumber: 29\n                          }, this), Array.isArray(states) && states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: state,\n                            children: state\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 411,\n                            columnNumber: 31\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 404,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center mt-4\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      size: \"lg\",\n                      onClick: handleStateCompare,\n                      disabled: !state1 || !state2 || loading,\n                      children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                          animation: \"border\",\n                          size: \"sm\",\n                          className: \"me-2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 429,\n                          columnNumber: 29\n                        }, this), \"Comparing...\"]\n                      }, void 0, true) : 'Compare States'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"cities\",\n              title: \"City Comparison\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title mb-4\",\n                    children: \"Compare Cities\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    className: \"g-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: 5,\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"First City\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 448,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                          value: cityState1,\n                          onChange: e => {\n                            setCityState1(e.target.value);\n                            setCity1('');\n                          },\n                          disabled: loading,\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"Choose state...\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 457,\n                            columnNumber: 29\n                          }, this), Array.isArray(states) && states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: state,\n                            children: state\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 459,\n                            columnNumber: 31\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 449,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                          value: city1,\n                          onChange: e => setCity1(e.target.value),\n                          disabled: !cityState1 || loading,\n                          className: \"mt-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"Choose city...\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 470,\n                            columnNumber: 29\n                          }, this), Array.isArray(cities1) && cities1.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: city,\n                            children: city\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 472,\n                            columnNumber: 31\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 464,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 2,\n                      className: \"d-flex align-items-end\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center w-100\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-muted\",\n                          children: \"VS\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 482,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 481,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 5,\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Second City\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 488,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                          value: cityState2,\n                          onChange: e => {\n                            setCityState2(e.target.value);\n                            setCity2('');\n                          },\n                          disabled: loading,\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"Choose state...\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 497,\n                            columnNumber: 29\n                          }, this), Array.isArray(states) && states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: state,\n                            children: state\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 499,\n                            columnNumber: 31\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 489,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                          value: city2,\n                          onChange: e => setCity2(e.target.value),\n                          disabled: !cityState2 || loading,\n                          className: \"mt-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"Choose city...\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 510,\n                            columnNumber: 29\n                          }, this), Array.isArray(cities2) && cities2.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: city,\n                            children: city\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 512,\n                            columnNumber: 31\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 504,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 487,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center mt-4\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      size: \"lg\",\n                      onClick: handleCityCompare,\n                      disabled: !cityState1 || !city1 || !cityState2 || !city2 || loading,\n                      children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                          animation: \"border\",\n                          size: \"sm\",\n                          className: \"me-2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 530,\n                          columnNumber: 29\n                        }, this), \"Comparing...\"]\n                      }, void 0, true) : 'Compare Cities'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this), comparisonData && comparisonData.data && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(CompareCard, {\n            data: comparisonData.data.state1_data || {},\n            title: ((_comparisonData$data$ = comparisonData.data.state1_data) === null || _comparisonData$data$ === void 0 ? void 0 : _comparisonData$data$.name) || 'First Destination',\n            type: activeTab\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(CompareCard, {\n            data: comparisonData.data.state2_data || {},\n            title: ((_comparisonData$data$2 = comparisonData.data.state2_data) === null || _comparisonData$data$2 === void 0 ? void 0 : _comparisonData$data$2.name) || 'Second Destination',\n            type: activeTab\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          children: renderComparisonChart()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n};\n_s(Compare, \"7ID/Os20H0TtLhfn9Xa0lQ06/dY=\");\n_c = Compare;\nexport default Compare;\nvar _c;\n$RefreshReg$(_c, \"Compare\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Alert","Spinner","Tabs","Tab","dataAPI","aiAPI","mockDataAPI","mockAiAPI","CompareCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Compare","_s","_comparisonData$data$","_comparisonData$data$2","states","setStates","cities1","setCities1","cities2","setCities2","loading","setLoading","error","setError","comparisonData","setComparisonData","activeTab","setActiveTab","state1","setState1","state2","setState2","cityState1","setCityState1","cityState2","setCityState2","city1","setCity1","city2","setCity2","fetchStates","fetchCities","response","getStates","data","err","console","log","mockResponse","stateName","setter","getStateCities","citiesData","Array","isArray","map","city","city_name","name","handleStateCompare","_data$safety_index","_data$visitors_","_data$famous_for","_data$best_season","_data$population","_data$literacy_rate","_data$gdp_inr_crore","_data$area_km","_data$visitors_2","_data$visitors_3","_data$visitors_4","_data$visitors_5","_data$visitors_6","_data$visitors_7","_data$safety_index2","_data$visitors_8","_data$famous_for2","_data$best_season2","_data$population2","_data$literacy_rate2","_data$gdp_inr_crore2","_data$area_km2","_data$visitors_9","_data$visitors_0","_data$visitors_1","_data$visitors_10","_data$visitors_11","_data$visitors_12","compareStates","state1Growth","visitors_2024","visitors_2023","toFixed","state2Growth","parseArray","arrStr","jsonStr","replace","JSON","parse","matches","match","slice","state1_data","tourism_growth","parseFloat","risk_index","safety_index","visitor_count","top_category","famous_for","best_month","best_season","population","literacy_rate","gdp","gdp_inr_crore","area","area_km2","visitors","visitors_2020","visitors_2021","visitors_2022","visitors_2025","state2_data","type","handleCityCompare","_data$tourist_rating","_data$risk_index","_data$category","_data$best_time_to_vi","_data$tourist_rating2","_data$risk_index2","_data$category2","_data$best_time_to_vi2","compareCities","city1Key","city2Key","state","tourist_rating","category","best_time_to_visit","renderComparisonChart","_state1_data$visitors","_state2_data$visitors","years","state1Visitors","year","state2Visitors","maxVisitors","Math","max","minVisitors","min","range","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","padding","index","state1Height","state2Height","flex","minWidth","width","backgroundColor","borderRadius","marginBottom","transition","cursor","title","toLocaleString","fontSize","color","md","lg","activeKey","onSelect","k","eventKey","Group","Label","Select","value","onChange","e","target","disabled","variant","size","onClick","animation","_c","$RefreshReg$"],"sources":["C:/Users/prera/OneDrive/Desktop/MinorProjectC21/src/pages/Compare.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Form, Button, Alert, Spinner, Tabs, Tab } from 'react-bootstrap';\r\nimport { dataAPI, aiAPI, mockDataAPI, mockAiAPI } from '../services/api';\r\nimport CompareCard from '../components/CompareCard';\r\n\r\nconst Compare = () => {\r\n  const [states, setStates] = useState([]);\r\n  const [cities1, setCities1] = useState([]);\r\n  const [cities2, setCities2] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [comparisonData, setComparisonData] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('states');\r\n\r\n  // State comparison\r\n  const [state1, setState1] = useState('');\r\n  const [state2, setState2] = useState('');\r\n\r\n  // City comparison\r\n  const [cityState1, setCityState1] = useState('');\r\n  const [cityState2, setCityState2] = useState('');\r\n  const [city1, setCity1] = useState('');\r\n  const [city2, setCity2] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchStates();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cityState1) {\r\n      fetchCities(cityState1, 'cities1');\r\n    }\r\n  }, [cityState1]);\r\n\r\n  useEffect(() => {\r\n    if (cityState2) {\r\n      fetchCities(cityState2, 'cities2');\r\n    }\r\n  }, [cityState2]);\r\n\r\n  const fetchStates = async () => {\r\n    try {\r\n      const response = await dataAPI.getStates();\r\n      setStates(response.data);\r\n    } catch (err) {\r\n      console.log('Using mock data for states');\r\n      const mockResponse = await mockDataAPI.getStates();\r\n      setStates(mockResponse.data);\r\n    }\r\n  };\r\n\r\n  const fetchCities = async (stateName, setter) => {\r\n    try {\r\n      const response = await dataAPI.getStateCities(stateName);\r\n      console.log('Cities API Response:', response.data);\r\n      \r\n      // Backend returns array of city objects, extract city names\r\n      const citiesData = Array.isArray(response.data) \r\n        ? response.data.map(city => city.city_name || city.name || city)\r\n        : [];\r\n      console.log('Extracted city names:', citiesData);\r\n      \r\n      if (setter === 'cities1') {\r\n        setCities1(citiesData);\r\n      } else {\r\n        setCities2(citiesData);\r\n      }\r\n    } catch (err) {\r\n      console.log('Using mock data for cities');\r\n      const mockResponse = await mockDataAPI.getStateCities(stateName);\r\n      const citiesData = Array.isArray(mockResponse.data) ? mockResponse.data : [];\r\n      if (setter === 'cities1') {\r\n        setCities1(citiesData);\r\n      } else {\r\n        setCities2(citiesData);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStateCompare = async () => {\r\n    if (!state1 || !state2) {\r\n      setError('Please select both states');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setComparisonData(null);\r\n\r\n    try {\r\n      const response = await aiAPI.compareStates(state1, state2);\r\n      console.log('API Response:', response.data);\r\n      \r\n      // Extract data from backend response format\r\n      const data = response.data;\r\n      \r\n      // Calculate tourism growth from visitor data\r\n      const state1Growth = data.visitors_2024 && data.visitors_2023 ? \r\n        ((data.visitors_2024[state1] - data.visitors_2023[state1]) / data.visitors_2023[state1] * 100).toFixed(1) : 0;\r\n      const state2Growth = data.visitors_2024 && data.visitors_2023 ? \r\n        ((data.visitors_2024[state2] - data.visitors_2023[state2]) / data.visitors_2023[state2] * 100).toFixed(1) : 0;\r\n      \r\n      // Parse famous_for and best_season arrays (they come as strings with single quotes)\r\n      const parseArray = (arrStr) => {\r\n        if (typeof arrStr === 'string') {\r\n          try {\r\n            // Replace single quotes with double quotes for valid JSON\r\n            const jsonStr = arrStr.replace(/'/g, '\"');\r\n            return JSON.parse(jsonStr);\r\n          } catch {\r\n            // If JSON parsing fails, try to extract values manually\r\n            const matches = arrStr.match(/'([^']+)'/g);\r\n            if (matches) {\r\n              return matches.map(match => match.slice(1, -1));\r\n            }\r\n            return [arrStr];\r\n          }\r\n        }\r\n        return Array.isArray(arrStr) ? arrStr : [arrStr];\r\n      };\r\n      \r\n      // Convert backend response to frontend format\r\n      const comparisonData = {\r\n        state1_data: {\r\n          name: state1,\r\n          tourism_growth: parseFloat(state1Growth),\r\n          risk_index: data.safety_index?.[state1] ? (10 - data.safety_index[state1] * 10) : 0,\r\n          visitor_count: data.visitors_2024?.[state1] || 0,\r\n          top_category: parseArray(data.famous_for?.[state1])[0] || 'General',\r\n          best_month: parseArray(data.best_season?.[state1])[0] || 'Year-round',\r\n          population: data.population?.[state1] || 0,\r\n          literacy_rate: data.literacy_rate?.[state1] || 0,\r\n          gdp: data.gdp_inr_crore?.[state1] || 0,\r\n          area: data.area_km2?.[state1] || 0,\r\n          // Add visitor data for chart\r\n          visitors: {\r\n            2020: data.visitors_2020?.[state1] || 0,\r\n            2021: data.visitors_2021?.[state1] || 0,\r\n            2022: data.visitors_2022?.[state1] || 0,\r\n            2023: data.visitors_2023?.[state1] || 0,\r\n            2024: data.visitors_2024?.[state1] || 0,\r\n            2025: data.visitors_2025?.[state1] || 0\r\n          }\r\n        },\r\n        state2_data: {\r\n          name: state2,\r\n          tourism_growth: parseFloat(state2Growth),\r\n          risk_index: data.safety_index?.[state2] ? (10 - data.safety_index[state2] * 10) : 0,\r\n          visitor_count: data.visitors_2024?.[state2] || 0,\r\n          top_category: parseArray(data.famous_for?.[state2])[0] || 'General',\r\n          best_month: parseArray(data.best_season?.[state2])[0] || 'Year-round',\r\n          population: data.population?.[state2] || 0,\r\n          literacy_rate: data.literacy_rate?.[state2] || 0,\r\n          gdp: data.gdp_inr_crore?.[state2] || 0,\r\n          area: data.area_km2?.[state2] || 0,\r\n          // Add visitor data for chart\r\n          visitors: {\r\n            2020: data.visitors_2020?.[state2] || 0,\r\n            2021: data.visitors_2021?.[state2] || 0,\r\n            2022: data.visitors_2022?.[state2] || 0,\r\n            2023: data.visitors_2023?.[state2] || 0,\r\n            2024: data.visitors_2024?.[state2] || 0,\r\n            2025: data.visitors_2025?.[state2] || 0\r\n          }\r\n        }\r\n      };\r\n      \r\n      setComparisonData({\r\n        type: 'states',\r\n        data: comparisonData\r\n      });\r\n    } catch (err) {\r\n      console.log('Using mock data for state comparison');\r\n      const mockResponse = await mockAiAPI.compareStates(state1, state2);\r\n      console.log('Mock Response:', mockResponse.data);\r\n      setComparisonData({\r\n        type: 'states',\r\n        data: mockResponse.data || {}\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCityCompare = async () => {\r\n    if (!cityState1 || !city1 || !cityState2 || !city2) {\r\n      setError('Please select both cities');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setComparisonData(null);\r\n\r\n    try {\r\n      const response = await aiAPI.compareCities(cityState1, city1, cityState2, city2);\r\n      console.log('API Response:', response.data);\r\n      \r\n      // Extract data from backend response format\r\n      const data = response.data;\r\n      const city1Key = `${city1}, ${cityState1}`;\r\n      const city2Key = `${city2}, ${cityState2}`;\r\n      \r\n      // Convert backend response to frontend format\r\n      const comparisonData = {\r\n        state1_data: {\r\n          name: city1,\r\n          state: cityState1,\r\n          tourism_growth: data.tourist_rating?.[city1Key] || 0,\r\n          risk_index: data.risk_index?.[city1Key] || 0,\r\n          top_category: data.category?.[city1Key] || 'General',\r\n          best_month: data.best_time_to_visit?.[city1Key] || 'Year-round'\r\n        },\r\n        state2_data: {\r\n          name: city2,\r\n          state: cityState2,\r\n          tourism_growth: data.tourist_rating?.[city2Key] || 0,\r\n          risk_index: data.risk_index?.[city2Key] || 0,\r\n          top_category: data.category?.[city2Key] || 'General',\r\n          best_month: data.best_time_to_visit?.[city2Key] || 'Year-round'\r\n        }\r\n      };\r\n      \r\n      setComparisonData({\r\n        type: 'cities',\r\n        data: comparisonData\r\n      });\r\n    } catch (err) {\r\n      console.log('Using mock data for city comparison');\r\n      const mockResponse = await mockAiAPI.compareCities(cityState1, city1, cityState2, city2);\r\n      console.log('Mock Response:', mockResponse.data);\r\n      setComparisonData({\r\n        type: 'cities',\r\n        data: mockResponse.data || {}\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderComparisonChart = () => {\r\n    if (!comparisonData || !comparisonData.data) return null;\r\n\r\n    const { state1_data, state2_data } = comparisonData.data;\r\n    \r\n    // Only show chart for state comparison with visitor data\r\n    if (comparisonData.type !== 'states' || !state1_data.visitors || !state2_data.visitors) {\r\n      return null;\r\n    }\r\n\r\n    const years = [2020, 2021, 2022, 2023, 2024, 2025];\r\n    const state1Visitors = years.map(year => state1_data.visitors[year] || 0);\r\n    const state2Visitors = years.map(year => state2_data.visitors[year] || 0);\r\n    \r\n    const maxVisitors = Math.max(...state1Visitors, ...state2Visitors);\r\n    const minVisitors = Math.min(...state1Visitors, ...state2Visitors);\r\n    const range = maxVisitors - minVisitors;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h6 className=\"card-title\">Visitor Trends Comparison (2020-2025)</h6>\r\n          <p className=\"text-muted small\">Annual visitor data comparison between the two states</p>\r\n          \r\n          {/* Bar Chart */}\r\n          <div className=\"comparison-chart\" style={{ height: '200px', padding: '20px 0' }}>\r\n            <div className=\"d-flex align-items-end justify-content-between\" style={{ height: '160px' }}>\r\n              {years.map((year, index) => {\r\n                const state1Height = range > 0 ? ((state1Visitors[index] - minVisitors) / range * 100) : 50;\r\n                const state2Height = range > 0 ? ((state2Visitors[index] - minVisitors) / range * 100) : 50;\r\n                \r\n                return (\r\n                  <div key={year} className=\"d-flex flex-column align-items-center\" style={{ flex: 1, minWidth: '50px' }}>\r\n                    {/* State 1 Bar */}\r\n                    <div\r\n                      className=\"bar me-1\"\r\n                      style={{\r\n                        height: `${state1Height}%`,\r\n                        width: '20px',\r\n                        backgroundColor: '#007bff',\r\n                        borderRadius: '2px 2px 0 0',\r\n                        marginBottom: '4px',\r\n                        transition: 'all 0.3s ease',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                      title={`${state1_data.name} ${year}: ${state1Visitors[index].toLocaleString()} visitors`}\r\n                    ></div>\r\n                    \r\n                    {/* State 2 Bar */}\r\n                    <div\r\n                      className=\"bar\"\r\n                      style={{\r\n                        height: `${state2Height}%`,\r\n                        width: '20px',\r\n                        backgroundColor: '#28a745',\r\n                        borderRadius: '2px 2px 0 0',\r\n                        marginBottom: '8px',\r\n                        transition: 'all 0.3s ease',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                      title={`${state2_data.name} ${year}: ${state2Visitors[index].toLocaleString()} visitors`}\r\n                    ></div>\r\n                    \r\n                    <div className=\"text-center\">\r\n                      <div className=\"fw-bold\" style={{ fontSize: '0.7rem', color: '#333' }}>\r\n                        {year}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Legend */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"d-flex justify-content-center gap-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"me-2\" style={{ width: '12px', height: '12px', backgroundColor: '#007bff', borderRadius: '2px' }}></div>\r\n                <small className=\"text-muted\">{state1_data.name}</small>\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"me-2\" style={{ width: '12px', height: '12px', backgroundColor: '#28a745', borderRadius: '2px' }}></div>\r\n                <small className=\"text-muted\">{state2_data.name}</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Summary Stats */}\r\n          <div className=\"mt-4\">\r\n            <Row className=\"g-3\">\r\n              <Col md={6}>\r\n                <div className=\"text-center p-3 bg-light rounded\">\r\n                  <div className=\"fw-bold text-primary\">\r\n                    {state1_data.visitors[2025]?.toLocaleString() || 'N/A'}\r\n                  </div>\r\n                  <small className=\"text-muted\">{state1_data.name} - 2025 Visitors</small>\r\n                </div>\r\n              </Col>\r\n              <Col md={6}>\r\n                <div className=\"text-center p-3 bg-light rounded\">\r\n                  <div className=\"fw-bold text-success\">\r\n                    {state2_data.visitors[2025]?.toLocaleString() || 'N/A'}\r\n                  </div>\r\n                  <small className=\"text-muted\">{state2_data.name} - 2025 Visitors</small>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <Container>\r\n          <h1>Compare Destinations</h1>\r\n          <p>Compare states and cities side by side</p>\r\n        </Container>\r\n      </div>\r\n\r\n      <Container className=\"py-5\">\r\n        <Row className=\"mb-5\">\r\n          <Col lg={10} className=\"mx-auto\">\r\n            <Tabs\r\n              activeKey={activeTab}\r\n              onSelect={(k) => setActiveTab(k)}\r\n              className=\"mb-4\"\r\n            >\r\n              <Tab eventKey=\"states\" title=\"State Comparison\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title mb-4\">Compare States</h5>\r\n                    <Row className=\"g-3\">\r\n                      <Col md={5}>\r\n                        <Form.Group>\r\n                          <Form.Label>First State</Form.Label>\r\n                          <Form.Select\r\n                            value={state1}\r\n                            onChange={(e) => setState1(e.target.value)}\r\n                            disabled={loading}\r\n                          >\r\n                            <option value=\"\">Choose first state...</option>\r\n                            {Array.isArray(states) && states.map((state, index) => (\r\n                              <option key={index} value={state}>\r\n                                {state}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                      </Col>\r\n                      \r\n                      <Col md={2} className=\"d-flex align-items-end\">\r\n                        <div className=\"text-center w-100\">\r\n                          <span className=\"text-muted\">VS</span>\r\n                        </div>\r\n                      </Col>\r\n                      \r\n                      <Col md={5}>\r\n                        <Form.Group>\r\n                          <Form.Label>Second State</Form.Label>\r\n                          <Form.Select\r\n                            value={state2}\r\n                            onChange={(e) => setState2(e.target.value)}\r\n                            disabled={loading}\r\n                          >\r\n                            <option value=\"\">Choose second state...</option>\r\n                            {Array.isArray(states) && states.map((state, index) => (\r\n                              <option key={index} value={state}>\r\n                                {state}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n                    \r\n                    <div className=\"text-center mt-4\">\r\n                      <Button \r\n                        variant=\"primary\" \r\n                        size=\"lg\" \r\n                        onClick={handleStateCompare}\r\n                        disabled={!state1 || !state2 || loading}\r\n                      >\r\n                        {loading ? (\r\n                          <>\r\n                            <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                            Comparing...\r\n                          </>\r\n                        ) : (\r\n                          'Compare States'\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Tab>\r\n\r\n              <Tab eventKey=\"cities\" title=\"City Comparison\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title mb-4\">Compare Cities</h5>\r\n                    <Row className=\"g-3\">\r\n                      <Col md={5}>\r\n                        <Form.Group>\r\n                          <Form.Label>First City</Form.Label>\r\n                          <Form.Select\r\n                            value={cityState1}\r\n                            onChange={(e) => {\r\n                              setCityState1(e.target.value);\r\n                              setCity1('');\r\n                            }}\r\n                            disabled={loading}\r\n                          >\r\n                            <option value=\"\">Choose state...</option>\r\n                            {Array.isArray(states) && states.map((state, index) => (\r\n                              <option key={index} value={state}>\r\n                                {state}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Select>\r\n                          <Form.Select\r\n                            value={city1}\r\n                            onChange={(e) => setCity1(e.target.value)}\r\n                            disabled={!cityState1 || loading}\r\n                            className=\"mt-2\"\r\n                          >\r\n                            <option value=\"\">Choose city...</option>\r\n                            {Array.isArray(cities1) && cities1.map((city, index) => (\r\n                              <option key={index} value={city}>\r\n                                {city}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                      </Col>\r\n                      \r\n                      <Col md={2} className=\"d-flex align-items-end\">\r\n                        <div className=\"text-center w-100\">\r\n                          <span className=\"text-muted\">VS</span>\r\n                        </div>\r\n                      </Col>\r\n                      \r\n                      <Col md={5}>\r\n                        <Form.Group>\r\n                          <Form.Label>Second City</Form.Label>\r\n                          <Form.Select\r\n                            value={cityState2}\r\n                            onChange={(e) => {\r\n                              setCityState2(e.target.value);\r\n                              setCity2('');\r\n                            }}\r\n                            disabled={loading}\r\n                          >\r\n                            <option value=\"\">Choose state...</option>\r\n                            {Array.isArray(states) && states.map((state, index) => (\r\n                              <option key={index} value={state}>\r\n                                {state}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Select>\r\n                          <Form.Select\r\n                            value={city2}\r\n                            onChange={(e) => setCity2(e.target.value)}\r\n                            disabled={!cityState2 || loading}\r\n                            className=\"mt-2\"\r\n                          >\r\n                            <option value=\"\">Choose city...</option>\r\n                            {Array.isArray(cities2) && cities2.map((city, index) => (\r\n                              <option key={index} value={city}>\r\n                                {city}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n                    \r\n                    <div className=\"text-center mt-4\">\r\n                      <Button \r\n                        variant=\"primary\" \r\n                        size=\"lg\" \r\n                        onClick={handleCityCompare}\r\n                        disabled={!cityState1 || !city1 || !cityState2 || !city2 || loading}\r\n                      >\r\n                        {loading ? (\r\n                          <>\r\n                            <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\r\n                            Comparing...\r\n                          </>\r\n                        ) : (\r\n                          'Compare Cities'\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Tab>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Error Alert */}\r\n        {error && (\r\n          <Row className=\"mb-4\">\r\n            <Col>\r\n              <Alert variant=\"danger\">{error}</Alert>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n\r\n        {/* Comparison Results */}\r\n        {comparisonData && comparisonData.data && (\r\n          <Row className=\"g-4\">\r\n            <Col lg={6}>\r\n              <CompareCard \r\n                data={comparisonData.data.state1_data || {}}\r\n                title={comparisonData.data.state1_data?.name || 'First Destination'}\r\n                type={activeTab}\r\n              />\r\n            </Col>\r\n            \r\n            <Col lg={6}>\r\n              <CompareCard \r\n                data={comparisonData.data.state2_data || {}}\r\n                title={comparisonData.data.state2_data?.name || 'Second Destination'}\r\n                type={activeTab}\r\n              />\r\n            </Col>\r\n            \r\n            <Col lg={12}>\r\n              {renderComparisonChart()}\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compare;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}