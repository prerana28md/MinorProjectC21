{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prera\\\\OneDrive\\\\Desktop\\\\MinorProjectC21\\\\src\\\\pages\\\\Analysis.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { dataAPI, mockDataAPI } from '../services/api';\nimport TrendChart from '../components/TrendChart';\nimport RiskChart from '../components/RiskChart';\nimport WeatherCard from '../components/WeatherCard';\nimport PredictionChart from '../components/PredictionChart';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Analysis = () => {\n  _s();\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [analysisData, setAnalysisData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchStates();\n  }, []);\n\n  // Debug: Test API connection\n  useEffect(() => {\n    const testAPI = async () => {\n      try {\n        console.log('Testing API connection...');\n        const response = await dataAPI.getStates();\n        console.log('API test successful:', response.data);\n      } catch (err) {\n        console.error('API test failed:', err);\n      }\n    };\n    testAPI();\n  }, []);\n  useEffect(() => {\n    if (selectedState) {\n      console.log('State selected, fetching cities for:', selectedState);\n      fetchCities(selectedState);\n    }\n  }, [selectedState]);\n  const fetchStates = async () => {\n    try {\n      const response = await dataAPI.getStates();\n      console.log('States API Response:', response.data);\n      setStates(response.data);\n    } catch (err) {\n      console.log('Using mock data for states');\n      const mockResponse = await mockDataAPI.getStates();\n      setStates(mockResponse.data);\n    }\n  };\n  const fetchCities = async stateName => {\n    try {\n      console.log('Fetching cities for state:', stateName);\n\n      // Try different state name formats\n      let response;\n      try {\n        response = await dataAPI.getStateCities(stateName);\n      } catch (firstErr) {\n        console.log('First attempt failed, trying with different format...');\n        // Try with different case or format\n        const alternativeName = stateName.toLowerCase();\n        response = await dataAPI.getStateCities(alternativeName);\n      }\n      console.log('Cities API Response:', response.data);\n\n      // Backend returns array of city objects, extract city names\n      const cityNames = Array.isArray(response.data) ? response.data.map(city => {\n        console.log('City object:', city);\n        return city.city_name || city.name || city;\n      }) : [];\n      console.log('Extracted city names:', cityNames);\n      setCities(cityNames);\n    } catch (err) {\n      console.error('Error fetching cities:', err);\n      console.log('Using mock data for cities');\n      const mockResponse = await mockDataAPI.getStateCities(stateName);\n      setCities(Array.isArray(mockResponse.data) ? mockResponse.data : []);\n    }\n  };\n  const handleAnalyze = async () => {\n    if (!selectedState) {\n      setError('Please select a state');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setAnalysisData(null);\n    try {\n      const [stateDetails, riskData, trendsData] = await Promise.all([dataAPI.getStateDetails(selectedState), dataAPI.getStateRisk(selectedState), dataAPI.getStateTourismTrends(selectedState)]);\n\n      // Convert trends object to array format for charts\n      const trendsArray = Object.entries(trendsData.data).map(([year, arrivals]) => ({\n        year: year,\n        arrivals: arrivals\n      }));\n\n      // Convert risk data to array format for charts\n      const riskArray = Object.entries(riskData.data).filter(([key, value]) => key !== 'state' && typeof value === 'number').map(([type, level]) => ({\n        type: type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n        level: level\n      }));\n      setAnalysisData({\n        state: stateDetails.data,\n        risk: {\n          risks: riskArray\n        },\n        trends: {\n          trends: trendsArray\n        }\n      });\n    } catch (err) {\n      console.log('Using mock data for analysis');\n      try {\n        const [stateDetails, riskData, trendsData] = await Promise.all([mockDataAPI.getStateDetails(selectedState), mockDataAPI.getStateRisk(selectedState), mockDataAPI.getStateTourismTrends(selectedState)]);\n        setAnalysisData({\n          state: stateDetails.data,\n          risk: riskData.data,\n          trends: trendsData.data\n        });\n      } catch (mockErr) {\n        setError('Failed to fetch analysis data');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getKeyInsights = () => {\n    if (!analysisData) return null;\n    const {\n      state,\n      risk,\n      trends\n    } = analysisData;\n    const insights = [];\n    if (trends && trends.trends && trends.trends.length > 0) {\n      const latestYear = trends.trends[trends.trends.length - 1];\n      const previousYear = trends.trends[trends.trends.length - 2];\n      if (latestYear && previousYear) {\n        const growth = ((latestYear.arrivals - previousYear.arrivals) / previousYear.arrivals * 100).toFixed(1);\n        insights.push(`Tourism growth: ${growth}%`);\n      }\n    }\n    if (risk && risk.risks) {\n      const avgRisk = risk.risks.reduce((sum, r) => sum + (r.level || r.score || 0), 0) / risk.risks.length;\n      insights.push(`Average risk level: ${avgRisk.toFixed(1)}/10`);\n    }\n    if (state && state.best_month) {\n      insights.push(`Best travel month: ${state.best_month}`);\n    }\n    if (state && state.top_category) {\n      insights.push(`Top category: ${state.top_category}`);\n    }\n    return insights;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Destination Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Analyze tourism trends, risks, and weather for any destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 8,\n          className: \"mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title mb-4\",\n                children: \"Select Destination\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"g-3\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"State\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      value: selectedState,\n                      onChange: e => {\n                        setSelectedState(e.target.value);\n                        setSelectedCity('');\n                      },\n                      disabled: loading,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Choose a state...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 25\n                      }, this), Array.isArray(states) && states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: state,\n                        children: state\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 27\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"City (Optional)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      value: selectedCity,\n                      onChange: e => setSelectedCity(e.target.value),\n                      disabled: !selectedState || loading,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Choose a city...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 25\n                      }, this), Array.isArray(cities) && cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: city,\n                        children: city\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 27\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-muted\",\n                      children: [\"Cities loaded: \", cities.length, \" | Selected state: \", selectedState]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 23\n                    }, this), selectedState && /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-secondary\",\n                      size: \"sm\",\n                      className: \"mt-2\",\n                      onClick: () => fetchCities(selectedState),\n                      children: \"Refresh Cities\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-4\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"lg\",\n                  onClick: handleAnalyze,\n                  disabled: !selectedState || loading,\n                  children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                      animation: \"border\",\n                      size: \"sm\",\n                      className: \"me-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 25\n                    }, this), \"Analyzing...\"]\n                  }, void 0, true) : 'Analyze Destination'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), analysisData && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"g-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(TrendChart, {\n            data: analysisData.trends,\n            title: \"Tourism Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(RiskChart, {\n            data: analysisData.risk,\n            title: \"Risk Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(WeatherCard, {\n            cityName: selectedCity,\n            stateName: selectedState,\n            title: \"Weather Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card h-100\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"card-title\",\n                children: \"Key Insights\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), getKeyInsights() ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-unstyled\",\n                children: getKeyInsights().map((insight, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-check-circle text-success me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 27\n                  }, this), insight]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                children: \"No insights available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), analysisData.state && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"State Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row g-2\",\n                  children: [analysisData.state.capital && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-muted\",\n                      children: \"Capital:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fw-bold\",\n                      children: analysisData.state.capital\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 27\n                  }, this), analysisData.state.population && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-muted\",\n                      children: \"Population:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fw-bold\",\n                      children: analysisData.state.population.toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(Analysis, \"w6AY7SNBiOZixWJuO1i/mfbFGb8=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Form","Button","Alert","Spinner","dataAPI","mockDataAPI","TrendChart","RiskChart","WeatherCard","PredictionChart","jsxDEV","_jsxDEV","Fragment","_Fragment","Analysis","_s","states","setStates","cities","setCities","selectedState","setSelectedState","selectedCity","setSelectedCity","analysisData","setAnalysisData","loading","setLoading","error","setError","fetchStates","testAPI","console","log","response","getStates","data","err","fetchCities","mockResponse","stateName","getStateCities","firstErr","alternativeName","toLowerCase","cityNames","Array","isArray","map","city","city_name","name","handleAnalyze","stateDetails","riskData","trendsData","Promise","all","getStateDetails","getStateRisk","getStateTourismTrends","trendsArray","Object","entries","year","arrivals","riskArray","filter","key","value","type","level","replace","l","toUpperCase","state","risk","risks","trends","mockErr","getKeyInsights","insights","length","latestYear","previousYear","growth","toFixed","push","avgRisk","reduce","sum","r","score","best_month","top_category","children","className","fileName","_jsxFileName","lineNumber","columnNumber","lg","md","Group","Label","Select","onChange","e","target","disabled","index","variant","size","onClick","animation","title","cityName","insight","capital","population","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/prera/OneDrive/Desktop/MinorProjectC21/src/pages/Analysis.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { dataAPI, mockDataAPI } from '../services/api';\nimport TrendChart from '../components/TrendChart';\nimport RiskChart from '../components/RiskChart';\nimport WeatherCard from '../components/WeatherCard';\nimport PredictionChart from '../components/PredictionChart';\n\nconst Analysis = () => {\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [analysisData, setAnalysisData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchStates();\n  }, []);\n\n  // Debug: Test API connection\n  useEffect(() => {\n    const testAPI = async () => {\n      try {\n        console.log('Testing API connection...');\n        const response = await dataAPI.getStates();\n        console.log('API test successful:', response.data);\n      } catch (err) {\n        console.error('API test failed:', err);\n      }\n    };\n    testAPI();\n  }, []);\n\n  useEffect(() => {\n    if (selectedState) {\n      console.log('State selected, fetching cities for:', selectedState);\n      fetchCities(selectedState);\n    }\n  }, [selectedState]);\n\n  const fetchStates = async () => {\n    try {\n      const response = await dataAPI.getStates();\n      console.log('States API Response:', response.data);\n      setStates(response.data);\n    } catch (err) {\n      console.log('Using mock data for states');\n      const mockResponse = await mockDataAPI.getStates();\n      setStates(mockResponse.data);\n    }\n  };\n\n  const fetchCities = async (stateName) => {\n    try {\n      console.log('Fetching cities for state:', stateName);\n      \n      // Try different state name formats\n      let response;\n      try {\n        response = await dataAPI.getStateCities(stateName);\n      } catch (firstErr) {\n        console.log('First attempt failed, trying with different format...');\n        // Try with different case or format\n        const alternativeName = stateName.toLowerCase();\n        response = await dataAPI.getStateCities(alternativeName);\n      }\n      \n      console.log('Cities API Response:', response.data);\n      \n      // Backend returns array of city objects, extract city names\n      const cityNames = Array.isArray(response.data) \n        ? response.data.map(city => {\n            console.log('City object:', city);\n            return city.city_name || city.name || city;\n          })\n        : [];\n      console.log('Extracted city names:', cityNames);\n      setCities(cityNames);\n    } catch (err) {\n      console.error('Error fetching cities:', err);\n      console.log('Using mock data for cities');\n      const mockResponse = await mockDataAPI.getStateCities(stateName);\n      setCities(Array.isArray(mockResponse.data) ? mockResponse.data : []);\n    }\n  };\n\n  const handleAnalyze = async () => {\n    if (!selectedState) {\n      setError('Please select a state');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    setAnalysisData(null);\n\n    try {\n      const [stateDetails, riskData, trendsData] = await Promise.all([\n        dataAPI.getStateDetails(selectedState),\n        dataAPI.getStateRisk(selectedState),\n        dataAPI.getStateTourismTrends(selectedState)\n      ]);\n\n      // Convert trends object to array format for charts\n      const trendsArray = Object.entries(trendsData.data).map(([year, arrivals]) => ({\n        year: year,\n        arrivals: arrivals\n      }));\n\n      // Convert risk data to array format for charts\n      const riskArray = Object.entries(riskData.data)\n        .filter(([key, value]) => key !== 'state' && typeof value === 'number')\n        .map(([type, level]) => ({\n          type: type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n          level: level\n        }));\n\n      setAnalysisData({\n        state: stateDetails.data,\n        risk: { risks: riskArray },\n        trends: { trends: trendsArray }\n      });\n    } catch (err) {\n      console.log('Using mock data for analysis');\n      try {\n        const [stateDetails, riskData, trendsData] = await Promise.all([\n          mockDataAPI.getStateDetails(selectedState),\n          mockDataAPI.getStateRisk(selectedState),\n          mockDataAPI.getStateTourismTrends(selectedState)\n        ]);\n\n        setAnalysisData({\n          state: stateDetails.data,\n          risk: riskData.data,\n          trends: trendsData.data\n        });\n      } catch (mockErr) {\n        setError('Failed to fetch analysis data');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getKeyInsights = () => {\n    if (!analysisData) return null;\n\n    const { state, risk, trends } = analysisData;\n    const insights = [];\n\n    if (trends && trends.trends && trends.trends.length > 0) {\n      const latestYear = trends.trends[trends.trends.length - 1];\n      const previousYear = trends.trends[trends.trends.length - 2];\n      if (latestYear && previousYear) {\n        const growth = ((latestYear.arrivals - previousYear.arrivals) / previousYear.arrivals * 100).toFixed(1);\n        insights.push(`Tourism growth: ${growth}%`);\n      }\n    }\n\n    if (risk && risk.risks) {\n      const avgRisk = risk.risks.reduce((sum, r) => sum + (r.level || r.score || 0), 0) / risk.risks.length;\n      insights.push(`Average risk level: ${avgRisk.toFixed(1)}/10`);\n    }\n\n    if (state && state.best_month) {\n      insights.push(`Best travel month: ${state.best_month}`);\n    }\n\n    if (state && state.top_category) {\n      insights.push(`Top category: ${state.top_category}`);\n    }\n\n    return insights;\n  };\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <Container>\n          <h1>Destination Analysis</h1>\n          <p>Analyze tourism trends, risks, and weather for any destination</p>\n        </Container>\n      </div>\n\n      <Container className=\"py-5\">\n        {/* Selection Form */}\n        <Row className=\"mb-5\">\n          <Col lg={8} className=\"mx-auto\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title mb-4\">Select Destination</h5>\n                <Row className=\"g-3\">\n                  <Col md={6}>\n                    <Form.Group>\n                      <Form.Label>State</Form.Label>\n                      <Form.Select\n                        value={selectedState}\n                        onChange={(e) => {\n                          setSelectedState(e.target.value);\n                          setSelectedCity('');\n                        }}\n                        disabled={loading}\n                      >\n                        <option value=\"\">Choose a state...</option>\n                        {Array.isArray(states) && states.map((state, index) => (\n                          <option key={index} value={state}>\n                            {state}\n                          </option>\n                        ))}\n                      </Form.Select>\n                    </Form.Group>\n                  </Col>\n                  \n                  <Col md={6}>\n                    <Form.Group>\n                      <Form.Label>City (Optional)</Form.Label>\n                      <Form.Select\n                        value={selectedCity}\n                        onChange={(e) => setSelectedCity(e.target.value)}\n                        disabled={!selectedState || loading}\n                      >\n                        <option value=\"\">Choose a city...</option>\n                        {Array.isArray(cities) && cities.map((city, index) => (\n                          <option key={index} value={city}>\n                            {city}\n                          </option>\n                        ))}\n                      </Form.Select>\n                      {/* Debug info */}\n                      <small className=\"text-muted\">\n                        Cities loaded: {cities.length} | Selected state: {selectedState}\n                      </small>\n                      {selectedState && (\n                        <Button \n                          variant=\"outline-secondary\" \n                          size=\"sm\" \n                          className=\"mt-2\"\n                          onClick={() => fetchCities(selectedState)}\n                        >\n                          Refresh Cities\n                        </Button>\n                      )}\n                    </Form.Group>\n                  </Col>\n                </Row>\n                \n                <div className=\"text-center mt-4\">\n                  <Button \n                    variant=\"primary\" \n                    size=\"lg\" \n                    onClick={handleAnalyze}\n                    disabled={!selectedState || loading}\n                  >\n                    {loading ? (\n                      <>\n                        <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n                        Analyzing...\n                      </>\n                    ) : (\n                      'Analyze Destination'\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n\n        {/* Error Alert */}\n        {error && (\n          <Row className=\"mb-4\">\n            <Col>\n              <Alert variant=\"danger\">{error}</Alert>\n            </Col>\n          </Row>\n        )}\n\n        {/* Analysis Results */}\n        {analysisData && (\n          <Row className=\"g-4\">\n            {/* Tourism Trends Chart */}\n            <Col lg={6}>\n              <TrendChart \n                data={analysisData.trends} \n                title=\"Tourism Trends\"\n              />\n            </Col>\n\n            {/* Risk Analysis Chart */}\n            <Col lg={6}>\n              <RiskChart \n                data={analysisData.risk} \n                title=\"Risk Analysis\"\n              />\n            </Col>\n\n            {/* Weather Card */}\n            <Col lg={6}>\n              <WeatherCard \n                cityName={selectedCity}\n                stateName={selectedState}\n                title=\"Weather Forecast\"\n              />\n            </Col>\n\n            {/* Key Insights */}\n            <Col lg={6}>\n              <div className=\"card h-100\">\n                <div className=\"card-body\">\n                  <h6 className=\"card-title\">Key Insights</h6>\n                  {getKeyInsights() ? (\n                    <ul className=\"list-unstyled\">\n                      {getKeyInsights().map((insight, index) => (\n                        <li key={index} className=\"mb-2\">\n                          <i className=\"fas fa-check-circle text-success me-2\"></i>\n                          {insight}\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p className=\"text-muted\">No insights available</p>\n                  )}\n                  \n                  {analysisData.state && (\n                    <div className=\"mt-4\">\n                      <h6>State Information</h6>\n                      <div className=\"row g-2\">\n                        {analysisData.state.capital && (\n                          <div className=\"col-6\">\n                            <small className=\"text-muted\">Capital:</small>\n                            <div className=\"fw-bold\">{analysisData.state.capital}</div>\n                          </div>\n                        )}\n                        {analysisData.state.population && (\n                          <div className=\"col-6\">\n                            <small className=\"text-muted\">Population:</small>\n                            <div className=\"fw-bold\">{analysisData.state.population.toLocaleString()}</div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </Col>\n          </Row>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Analysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}